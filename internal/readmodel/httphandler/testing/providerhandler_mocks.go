// Code generated by MockGen. DO NOT EDIT.
// Source: providerhandler.go
//
// Generated by this command:
//
//	mockgen -source=providerhandler.go -destination=testing/providerhandler_mocks.go -package=testing ProviderGetter
//

// Package testing is a generated GoMock package.
package testing

import (
	reflect "reflect"
	models "tariff-calculation-service/internal/models"

	gomock "go.uber.org/mock/gomock"
)

// MockProviderGetter is a mock of ProviderGetter interface.
type MockProviderGetter struct {
	ctrl     *gomock.Controller
	recorder *MockProviderGetterMockRecorder
}

// MockProviderGetterMockRecorder is the mock recorder for MockProviderGetter.
type MockProviderGetterMockRecorder struct {
	mock *MockProviderGetter
}

// NewMockProviderGetter creates a new mock instance.
func NewMockProviderGetter(ctrl *gomock.Controller) *MockProviderGetter {
	mock := &MockProviderGetter{ctrl: ctrl}
	mock.recorder = &MockProviderGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProviderGetter) EXPECT() *MockProviderGetterMockRecorder {
	return m.recorder
}

// GetProvider mocks base method.
func (m *MockProviderGetter) GetProvider(partitionId, providerId string) (*models.Provider, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProvider", partitionId, providerId)
	ret0, _ := ret[0].(*models.Provider)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProvider indicates an expected call of GetProvider.
func (mr *MockProviderGetterMockRecorder) GetProvider(partitionId, providerId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProvider", reflect.TypeOf((*MockProviderGetter)(nil).GetProvider), partitionId, providerId)
}

// GetProviders mocks base method.
func (m *MockProviderGetter) GetProviders(partitionId string) (*[]models.Provider, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProviders", partitionId)
	ret0, _ := ret[0].(*[]models.Provider)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProviders indicates an expected call of GetProviders.
func (mr *MockProviderGetterMockRecorder) GetProviders(partitionId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProviders", reflect.TypeOf((*MockProviderGetter)(nil).GetProviders), partitionId)
}
