// Code generated by MockGen. DO NOT EDIT.
// Source: contracthandler.go
//
// Generated by this command:
//
//	mockgen -source=contracthandler.go -destination=testing/contracthandler_mocks.go -package=testing ContractGetter
//

// Package testing is a generated GoMock package.
package testing

import (
	reflect "reflect"
	models "tariff-calculation-service/internal/models"

	gomock "go.uber.org/mock/gomock"
)

// MockContractGetter is a mock of ContractGetter interface.
type MockContractGetter struct {
	ctrl     *gomock.Controller
	recorder *MockContractGetterMockRecorder
}

// MockContractGetterMockRecorder is the mock recorder for MockContractGetter.
type MockContractGetterMockRecorder struct {
	mock *MockContractGetter
}

// NewMockContractGetter creates a new mock instance.
func NewMockContractGetter(ctrl *gomock.Controller) *MockContractGetter {
	mock := &MockContractGetter{ctrl: ctrl}
	mock.recorder = &MockContractGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContractGetter) EXPECT() *MockContractGetterMockRecorder {
	return m.recorder
}

// GetContract mocks base method.
func (m *MockContractGetter) GetContract(partitionId, contractId string) (*models.Contract, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContract", partitionId, contractId)
	ret0, _ := ret[0].(*models.Contract)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContract indicates an expected call of GetContract.
func (mr *MockContractGetterMockRecorder) GetContract(partitionId, contractId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContract", reflect.TypeOf((*MockContractGetter)(nil).GetContract), partitionId, contractId)
}

// GetContracts mocks base method.
func (m *MockContractGetter) GetContracts(partitionId string) (*[]models.Contract, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContracts", partitionId)
	ret0, _ := ret[0].(*[]models.Contract)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContracts indicates an expected call of GetContracts.
func (mr *MockContractGetterMockRecorder) GetContracts(partitionId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContracts", reflect.TypeOf((*MockContractGetter)(nil).GetContracts), partitionId)
}
